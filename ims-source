#include<iostream>
#include<string.h>
using namespace std;

struct inventory{
    string name;
    int id,qty;
    float price;
    inventory * nptr;
};
void add(); void sell(); void buy(); void check();
float totalp;
inventory *fptr=NULL;
int main()
{   int choice;
while(1)
{
    cout<<"-----------------------------\n1. Add Inventory Item\n2. Make an Inventory Sale\n3. Buy Inventory from Supplier\n4. Check Stocks\n5. Exit\n--------------------\nSelect a choice: ";
    cin>>choice;
    switch(choice)
    {
    case 1:
        add();
        break;
    case 2:
        sell(); 
        break;
    case 3:
        buy();
        break;
    case 4:
        check();
        break;
    case 5:
        exit(0);
        break;  
    default:
        cout<<"Invalid Choice, Try Again!";
    }
}   
}

// Function Definitions!

void add()
{
    inventory *cptr=fptr; inventory *ptr= new inventory;
    cout<<"Enter Name of Item: "; cin>>ptr->name;
    cout<<"Enter Price of Item: "; cin>>ptr->price;
    cout<<"Enter Quantity of Item: "; cin>>ptr->qty;
    while(1)
    {
    cout<<"Enter ID of Item: "; cin>>ptr->id;
        if(fptr==NULL)
        break;
        inventory *cptr=fptr;
        int flag=1;
        while(cptr!=NULL)
        {   
            if(cptr->id==ptr->id)
            {   flag=0;
                break;
            }
            cptr=cptr->nptr;
        }
        if(flag==0)
            cout<<"Invalid ID, Try Again!\n";
        else
        break;  
    }
    ptr->nptr=fptr;
    fptr=ptr;   
}

void sell()
{   int id,qty;
    cout<<"Enter ID of item You want";
    cin>>id;
    inventory *cptr=fptr;
    while(cptr!=NULL)
        {   
            if(cptr->id==id)
            {   
            cout<<"How much you want to buy?";  
            cin>>qty;
            if(cptr->qty<=qty)
            {
                cptr->qty-=qty;
                if(cptr->qty==0)
                {   
                    inventory *pptr=fptr;  //Previous ptr
                    while(pptr->nptr!=cptr)
                    {
                        pptr=pptr->nptr;
                    }
                    pptr->nptr=cptr->nptr;
                    delete cptr;
                }
            }
            else
            {
            cout<<"Not Enough Stock Available";
            return;
            }
            break;
            }
            cptr=cptr->nptr;
        }
    if(cptr==NULL)
    cout<<"\nInvalid ID";
        
    
}

void buy()
{
    int id,qty;
    cout<<"Enter ID of item You want to buy";
    cin>>id;
    inventory *cptr=fptr;
    while(cptr!=NULL)
        {   
            if(cptr->id==id)
            {   
            cout<<"How much you want to buy from supplier?";    
            cin>>qty;
            cptr->qty+=qty;
            break;
            }
            cptr=cptr->nptr;
        }
    if(cptr==NULL)
    cout<<"\nInvalid ID";   
}
void check()
{
    inventory *cptr=fptr;
    if(fptr==NULL)
    cout<<"Empty Inventory";
    while(cptr!=NULL)
    {
        cout<<"Item Name: "<<cptr->name<<"\tItem ID: "<<cptr->id<<"\tItem Quantity: "<<cptr->qty<<"\tItem Price: "<<cptr->price<<endl;
        cptr=cptr->nptr;
    }
}

